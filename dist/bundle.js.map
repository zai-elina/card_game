{"version":3,"file":"bundle.js","mappings":";uKAEO,MAAMA,EAAa,KACtB,MAAMC,EAAUC,SAASC,cAAc,QAEvC,GAAgB,OAAZF,EAAkB,CAClBA,EAAQG,UAAY,srDAuCpB,MAAMC,EACFH,SAASI,iBAAmC,gBAC1CC,EAAgBL,SAASC,cAAc,qBAE7CI,SAAAA,EAAeC,iBAAiB,UAAU,KACtC,IAAK,IAAIC,KAAaJ,EAClB,GAAII,EAAUC,QAAS,CAEnB,IAAIC,EADEC,OAAQC,OAASJ,EAAUK,MAEL,IAAlBF,OAAQC,OACdF,EAAY,GACZ,IAAAI,WAAUJ,IACqB,IAAlBC,OAAQC,OACrBF,EAAY,IACZ,IAAAI,WAAUJ,IACqB,IAAlBC,OAAQC,QACrBF,EAAY,IACZ,IAAAI,WAAUJ,mHC5D3B,MAAMK,EAAiB,CAC1BC,EACAN,KAEA,MAAMO,EAAW,CAAC,OAAQ,QAAS,QAAS,UACtCC,EAAO,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,QAAS,OAAQ,SAAU,OACzD,IAAIC,EAAkD,GAEtD,IAAK,IAAIC,EAAI,EAAGA,EAAIV,EAAY,EAAGU,IAAK,CACpC,IAAIC,EAA0C,CAAC,EAC3CC,EAAOL,EAASM,KAAKC,MAAMD,KAAKE,SAAWR,EAASS,SACpDC,EAAOT,EAAKK,KAAKC,MAAMD,KAAKE,SAAWP,EAAKQ,SAChDL,EAAIC,GAAQK,EACZR,EAAUS,KAAKP,GACfF,EAAUS,KAAKP,GAGnBF,GAAY,IAAAU,SAAQV,GAEpB,IAAK,MAAMQ,KAAQR,EACf,IAAK,MAAMW,KAAOH,EACdX,EAAeb,WAAa,6CAA6CwB,EAAKG,MAAQA,+GAGrDH,EAAKG,MAAQA,mNAWtD,MAAMC,EAAc9B,SAASI,iBAAiB,gBACxC2B,EAAY/B,SAASI,iBAAiB,qBAW5C,OATA4B,YAAW,KACP,IAAK,MAAMC,KAAYF,EACnBE,EAASC,UAAUC,IAAI,UAE3B,IAAK,MAAMC,KAAaN,EACpBM,EAAUF,UAAUG,OAAO,YAEhC,KAEInB,CAAS,8DCjDb,MAAMU,EAAWU,IACpB,IACIC,EADAC,EAAeF,EAAMb,OAGzB,KAAwB,IAAjBe,GACHD,EAAcjB,KAAKC,MAAMD,KAAKE,SAAWgB,GACzCA,KAECF,EAAME,GAAeF,EAAMC,IAAgB,CACxCD,EAAMC,GACND,EAAME,IAId,OAAOF,CAAK,2GCZT,MAAMzB,EAAaJ,IACtB,IAAIgC,GAAa,EACbC,GAAc,EACdC,GAAY,EAEhB,MAAM5C,EAAUC,SAASC,cAAc,QAEvC,GAAgB,OAAZF,EAAkB,CAClBA,EAAQG,UAAY,8wBAkBpB,MAAMa,EAAiBf,SAASC,cAAc,mBACxC2C,EAAU5C,SAASC,cAAc,iBACvC,IAAAa,gBAAeC,EAA+BN,GAC9C,MAAMoC,EAAY7C,SAASI,iBAA8B,eAEzDwC,SAAAA,EAAStC,iBAAiB,UAAU,KAChCO,EAAUJ,EAAU,IAGxBoC,EAAUC,SAAQ,CAACpB,EAAMqB,KACrBrB,EAAKpB,iBAAiB,SAAS,cACT,IAAdqC,GAAuBjB,EAAKQ,UAAUc,SAAS,aACR,QAAvC,EAAAtB,EAAKzB,cAAc,4BAAoB,SAAEiC,UAAUG,OAC/C,UAE8B,QAAlC,EAAAX,EAAKzB,cAAc,uBAAe,SAAEiC,UAAUC,IAAI,WAE/B,IAAfM,EACAA,EAAYM,EACLA,IAAUN,IACjBC,EAAaK,EACbJ,GAAY,IAIG,IAAfF,IACgB,IAAhBC,GACAD,IAAcC,IAGVG,EAAUJ,GAAWQ,QAAQvB,OAC7BmB,EAAUH,GAAYO,QAAQvB,KAE9BM,YAAW,KACPa,EAAUJ,GAAWP,UAAUC,IAAI,WACnCU,EAAUH,GAAYR,UAAUC,IAAI,WACpCQ,GAAY,EACZF,GAAa,EACbC,GAAc,EAEVQ,MAAMC,KAAKN,GAAWO,OAAO1B,GACzBA,EAAKQ,UAAUc,SAAS,eAG5BK,MAAM,eACNxC,EAAUJ,MAEf,KAEHuB,YAAW,iBAEgC,QADvC,EAAAa,EAAUJ,GACLxC,cAAc,4BAAoB,SACjCiC,UAAUC,IAAI,UAEc,QADlC,EAAAU,EAAUJ,GACLxC,cAAc,uBAAe,SAC5BiC,UAAUG,OAAO,UAEgB,QADvC,EAAAQ,EAAUH,GACLzC,cAAc,4BAAoB,SACjCiC,UAAUC,IAAI,UAEc,QADlC,EAAAU,EAAUH,GACLzC,cAAc,uBAAe,SAC5BiC,UAAUG,OAAO,UAEvBM,GAAY,EACZF,GAAa,EACbC,GAAc,CAAC,GAChB,SAIjB,QCjGVY,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaE,QAGrB,IAAIC,EAASN,EAAyBE,GAAY,CAGjDG,QAAS,CAAC,GAOX,OAHAE,EAAoBL,GAAUI,EAAQA,EAAOD,QAASJ,GAG/CK,EAAOD,OACf,CCrBAJ,EAAoBO,EAAI,CAACH,EAASI,KACjC,IAAI,IAAIlC,KAAOkC,EACXR,EAAoBS,EAAED,EAAYlC,KAAS0B,EAAoBS,EAAEL,EAAS9B,IAC5EoC,OAAOC,eAAeP,EAAS9B,EAAK,CAAEsC,YAAY,EAAMC,IAAKL,EAAWlC,IAE1E,ECND0B,EAAoBS,EAAI,CAAC5C,EAAKiD,IAAUJ,OAAOK,UAAUC,eAAeC,KAAKpD,EAAKiD,GCClFd,EAAoBkB,EAAKd,IACH,oBAAXe,QAA0BA,OAAOC,aAC1CV,OAAOC,eAAeP,EAASe,OAAOC,YAAa,CAAE/D,MAAO,WAE7DqD,OAAOC,eAAeP,EAAS,aAAc,CAAE/C,OAAO,GAAO,8CCD1D,4BAAAd","sources":["webpack://card_name/./src/js/cardMenu.ts","webpack://card_name/./src/js/createCardList.ts","webpack://card_name/./src/js/help.ts","webpack://card_name/./src/js/startGame.ts","webpack://card_name/webpack/bootstrap","webpack://card_name/webpack/runtime/define property getters","webpack://card_name/webpack/runtime/hasOwnProperty shorthand","webpack://card_name/webpack/runtime/make namespace object","webpack://card_name/./src/js/main.ts"],"sourcesContent":["import { startGame } from \"./startGame\";\r\n\r\nexport const createMenu = () => {\r\n    const appHtml = document.querySelector(\".app\");\r\n\r\n    if (appHtml !== null) {\r\n        appHtml.innerHTML = `<section class=\"complexity\">\r\n                <h1 class=\"complexity__title\">Выбери сложность</h1>\r\n                <form action=\"\" class=\"complexity__form\">\r\n                    <div class=\"complexity__levels\">\r\n                        <div class=\"complexity__level\">\r\n                            <input\r\n                                type=\"radio\"\r\n                                name=\"level\"\r\n                                class=\"radio-input\"\r\n                                value=\"1\"\r\n                                id=\"radio1\"\r\n                            />\r\n                            <label for=\"radio1\">1</label>\r\n                        </div>\r\n                        <div class=\"complexity__level\">\r\n                            <input\r\n                                type=\"radio\"\r\n                                name=\"level\"\r\n                                class=\"radio-input\"\r\n                                value=\"2\"\r\n                                id=\"radio2\"\r\n                            />\r\n                            <label for=\"radio2\">2</label>\r\n                        </div>\r\n                        <div class=\"complexity__level\">\r\n                            <input\r\n                                type=\"radio\"\r\n                                name=\"level\"\r\n                                class=\"radio-input\"\r\n                                value=\"3\"\r\n                                id=\"radio3\"\r\n                            />\r\n                            <label for=\"radio3\">3</label>\r\n                        </div>\r\n                    </div>\r\n                    <button class=\"complexity__button btn-start\">Старт</button>\r\n                </form>\r\n            </section>`;\r\n\r\n        const gameLevels =\r\n            document.querySelectorAll<HTMLInputElement>(\".radio-input\");\r\n        const formForLevels = document.querySelector(\".complexity__form\");\r\n\r\n        formForLevels?.addEventListener(\"submit\", () => {\r\n            for (let gameLevel of gameLevels) {\r\n                if (gameLevel.checked) {\r\n                    (<any>window).level = +gameLevel.value;\r\n                    let countCard;\r\n                    if ((<any>window).level === 1) {\r\n                        countCard = 6;\r\n                        startGame(countCard);\r\n                    } else if ((<any>window).level === 2) {\r\n                        countCard = 12;\r\n                        startGame(countCard);\r\n                    } else if ((<any>window).level === 3) {\r\n                        countCard = 18;\r\n                        startGame(countCard);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n};\r\n","import { shuffle } from \"./help\";\r\n\r\nexport const createCardList = (\r\n    cardsContainer: HTMLElement,\r\n    countCard: number\r\n) => {\r\n    const cardSuit = [\"пики\", \"черви\", \"бубны\", \"крести\"];\r\n    const rang = [6, 7, 8, 9, 10, \"валет\", \"дама\", \"король\", \"туз\"];\r\n    let gameCards: { [key: string]: string | number }[] = [];\r\n\r\n    for (let i = 0; i < countCard / 2; i++) {\r\n        let obj: { [key: string]: string | number } = {};\r\n        let suit = cardSuit[Math.floor(Math.random() * cardSuit.length)];\r\n        let card = rang[Math.floor(Math.random() * rang.length)];\r\n        obj[suit] = card;\r\n        gameCards.push(obj);\r\n        gameCards.push(obj);\r\n    }\r\n\r\n    gameCards = shuffle(gameCards);\r\n\r\n    for (const card of gameCards) {\r\n        for (const key in card) {\r\n            cardsContainer.innerHTML += `<div class=\"cards_item card\" data-card = \"${card[key]} ${key}\">\r\n            <img\r\n                class=\"card__open-image\"\r\n                src=\"./static/images/cards/${card[key]} ${key}.png\"\r\n            />\r\n            <img\r\n                class=\"card__image hidden\"\r\n                src=\"./static/images/Mask group.svg\"\r\n                alt=\"Закрытая карта\"\r\n            />\r\n        </div>`;\r\n        }\r\n    }\r\n\r\n    const closedCards = document.querySelectorAll(\".card__image\");\r\n    const openCards = document.querySelectorAll(\".card__open-image\");\r\n\r\n    setTimeout(() => {\r\n        for (const openCard of openCards) {\r\n            openCard.classList.add(\"hidden\");\r\n        }\r\n        for (const closeCard of closedCards) {\r\n            closeCard.classList.remove(\"hidden\");\r\n        }\r\n    }, 3000);\r\n\r\n    return gameCards;\r\n};\r\n","export const shuffle = (array: { [key: string]: string | number }[]) => {\r\n    let currentIndex = array.length,\r\n        randomIndex;\r\n\r\n    while (currentIndex !== 0) {\r\n        randomIndex = Math.floor(Math.random() * currentIndex);\r\n        currentIndex--;\r\n\r\n        [array[currentIndex], array[randomIndex]] = [\r\n            array[randomIndex],\r\n            array[currentIndex],\r\n        ];\r\n    }\r\n\r\n    return array;\r\n};\r\n","import { createCardList } from \"./createCardList\";\r\n\r\nexport const startGame = (countCard: number) => {\r\n    let firstCard = -1;\r\n    let secondCard = -1;\r\n    let clickable = true;\r\n\r\n    const appHtml = document.querySelector(\".app\");\r\n\r\n    if (appHtml !== null) {\r\n        appHtml.innerHTML = `<section class=\"cards\">\r\n                    <div class=\"cards__title\">\r\n                        <div class=\"cards__time time\">\r\n                            <div class=\"time__units\">min</div>\r\n                            <div class=\"time__units time__units--sek\">sek</div>\r\n                            <div class=\"time__value\">00.00</div>\r\n                        </div>\r\n                        <form action=\"\" class=\"start-again\">\r\n                            <button type=\"submit\">Начать заново</button>\r\n                        </form>\r\n                    </div>\r\n                    <div class=\"cards__wrapper\">\r\n                    </div>\r\n                    <div class=\"cards__modal>\r\n                    hjgjhghgh\r\n                    </div>\r\n                </section>`;\r\n\r\n        const cardsContainer = document.querySelector(\".cards__wrapper\");\r\n        const restart = document.querySelector(\".start-again\");\r\n        createCardList(cardsContainer as HTMLElement, countCard);\r\n        const cardsList = document.querySelectorAll<HTMLElement>(\".cards_item\");\r\n\r\n        restart?.addEventListener(\"submit\", () => {\r\n            startGame(countCard);\r\n        });\r\n\r\n        cardsList.forEach((card, index) => {\r\n            card.addEventListener(\"click\", () => {\r\n                if (clickable === true && !card.classList.contains(\"success\")) {\r\n                    card.querySelector(\".card__open-image\")?.classList.remove(\r\n                        \"hidden\"\r\n                    );\r\n                    card.querySelector(\".card__image\")?.classList.add(\"hidden\");\r\n\r\n                    if (firstCard === -1) {\r\n                        firstCard = index;\r\n                    } else if (index !== firstCard) {\r\n                        secondCard = index;\r\n                        clickable = false;\r\n                    }\r\n\r\n                    if (\r\n                        firstCard !== -1 &&\r\n                        secondCard !== -1 &&\r\n                        firstCard !== secondCard\r\n                    ) {\r\n                        if (\r\n                            cardsList[firstCard].dataset.card ===\r\n                            cardsList[secondCard].dataset.card\r\n                        ) {\r\n                            setTimeout(() => {\r\n                                cardsList[firstCard].classList.add(\"success\");\r\n                                cardsList[secondCard].classList.add(\"success\");\r\n                                clickable = true;\r\n                                firstCard = -1;\r\n                                secondCard = -1;\r\n                                if (\r\n                                    Array.from(cardsList).every((card) =>\r\n                                        card.classList.contains(\"success\")\r\n                                    )\r\n                                ) {\r\n                                    alert(\"Вы выграли!\");\r\n                                    startGame(countCard);\r\n                                }\r\n                            }, 500);\r\n                        } else {\r\n                            setTimeout(() => {\r\n                                cardsList[firstCard]\r\n                                    .querySelector(\".card__open-image\")\r\n                                    ?.classList.add(\"hidden\");\r\n                                cardsList[firstCard]\r\n                                    .querySelector(\".card__image\")\r\n                                    ?.classList.remove(\"hidden\");\r\n                                cardsList[secondCard]\r\n                                    .querySelector(\".card__open-image\")\r\n                                    ?.classList.add(\"hidden\");\r\n                                cardsList[secondCard]\r\n                                    .querySelector(\".card__image\")\r\n                                    ?.classList.remove(\"hidden\");\r\n\r\n                                clickable = true;\r\n                                firstCard = -1;\r\n                                secondCard = -1;\r\n                            }, 500);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        });\r\n    }\r\n};\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import \"../scss/style.scss\";\r\nimport { createMenu } from \"./cardMenu\";\r\n\r\nconst renderApp = () => {\r\n    createMenu();\r\n};\r\n\r\nrenderApp();\r\n"],"names":["createMenu","appHtml","document","querySelector","innerHTML","gameLevels","querySelectorAll","formForLevels","addEventListener","gameLevel","checked","countCard","window","level","value","startGame","createCardList","cardsContainer","cardSuit","rang","gameCards","i","obj","suit","Math","floor","random","length","card","push","shuffle","key","closedCards","openCards","setTimeout","openCard","classList","add","closeCard","remove","array","randomIndex","currentIndex","firstCard","secondCard","clickable","restart","cardsList","forEach","index","contains","dataset","Array","from","every","alert","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","d","definition","o","Object","defineProperty","enumerable","get","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag"],"sourceRoot":""}